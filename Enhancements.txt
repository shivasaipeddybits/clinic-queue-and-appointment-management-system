####################
Services
####################

1. Frontend Service (FastAPI with Jinja2 or similar)
- Acts as the entry point.
- Serves HTML pages and handles user interaction.
- Makes internal API requests to:
  :- Patient Service (login/register)
  :- Doctor Service (fetch doctor list)
  :- Appointment Service (book/view appointments)

2. Patient Service
-Manages patient registration and authentication.
- Exposes APIs like /patients/, /patients/verify.

3. Doctor Service
- Manages doctor profiles.
- APIs like /doctors/, /doctors/{id}.

4. Appointment Service
- Handles booking and retrieval of appointments.
- After booking, calls Notification Service.

5. Notification Service
- Sends email notifications using Mailgun
- Accepts POST request at /notify.

6. Database Service
- Shared DB (Postgresql) service used by all other services.
- Each service has its own schema/tables.

#########################
Enhancements
#########################
1. Appointment Service implement graphql to query from multiple other services.
2. Notification Service can be set up on message queuing service to support independent execution.
3. CRUD Operations for all entities can be defined
